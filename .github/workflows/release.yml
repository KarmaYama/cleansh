# .github/workflows/release.yml
name: Release

on:
  push:
    # Build a release whenever a new tag is pushed.
    # The default tag pattern for cargo-dist is `v*`.
    tags:
      - 'v*'
  workflow_dispatch: # Allows manual triggering of the workflow from the GitHub UI

env:
  # This token is automatically provided by GitHub Actions for workflows triggered by pushes.
  # It has permissions to create GitHub Releases and upload assets.
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  # The cargo-dist command to build all the releases.
  # This uses a matrix strategy to run builds for different platforms.
  cleansh_build:
    runs-on: ${{ matrix.os }}
    strategy:
      # We target all platforms that cargo-dist supports out of the box.
      # You can customize this list if you only want to release for a subset.
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      # Ensure ~/.cargo/bin is explicitly added to PATH
      - name: Set up PATH for cargo binaries
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - uses: actions/cache@v4
        with:
          # Temporarily remove ~/.cargo/bin/ from cache path to force a fresh cargo-dist install.
          # If this solves the issue, you can consider re-adding it for faster runs,
          # but for now, let's prioritize a reliable install.
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-dist
        run: cargo install cargo-dist --locked
      - name: Verify cargo-dist installation
        run: |
          echo "Current PATH: $PATH"
          which cargo-dist || { echo "Error: cargo-dist not found in PATH after installation"; exit 1; }
          cargo --list | grep " dist" || { echo "Error: 'cargo dist' not listed as a subcommand"; exit 1; }
      - name: Run cargo dist build
        # ${{ github.ref_name }} directly gives the tag name (e.g., "v0.1.4")
        run: cargo dist dist --tag ${{ github.ref_name }}

  # The cargo-dist command to upload the release assets to GitHub.
  cleansh_upload:
    runs-on: ubuntu-latest
    needs: [cleansh_build] # Ensure builds are complete before uploading
    steps:
      - uses: actions/checkout@v4
      # Ensure ~/.cargo/bin is explicitly added to PATH
      - name: Set up PATH for cargo binaries
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - uses: actions/cache@v4
        with:
          # Same cache path adjustment as in cleansh_build
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-dist
        run: cargo install cargo-dist --locked
      - name: Verify cargo-dist installation for upload
        run: |
          echo "Current PATH: $PATH"
          which cargo-dist || { echo "Error: cargo-dist not found in PATH after installation"; exit 1; }
          cargo --list | grep " dist" || { echo "Error: 'cargo dist' not listed as a subcommand"; exit 1; }
      - name: Run cargo dist upload
        # ${{ github.ref_name }} directly gives the tag name (e.g., "v0.1.4")
        run: cargo dist upload --tag ${{ github.ref_name }}