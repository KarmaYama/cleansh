name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  cleansh_build:
    name: Build & Package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add cargo bin to PATH
        run: echo "${HOME}/.cargo/bin" >> $GITHUB_PATH

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install openssl@1.1 pkg-config
        shell: bash

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
        shell: bash

      - name: Cache Cargo registry & build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-dist (Unix)
        if: runner.os != 'Windows'
        run: |
          cargo install cargo-dist --locked --force
        shell: bash

      - name: Install cargo-dist (Windows)
        if: runner.os == 'Windows'
        run: |
          cargo install cargo-dist --locked --force
        shell: pwsh

      # --- DEBUGGING STEPS START HERE ---
      - name: Debug PATH and cargo-dist (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          echo "--- Current PATH (Unix) ---"
          echo $PATH
          echo "--- Locate 'dist' binary (Unix) ---"
          which dist || echo "'dist' binary not found in PATH"
          echo "--- List Cargo subcommands (Unix) ---"
          cargo --list
          echo "--- Attempt to run cargo dist help (Unix) ---"
          cargo dist --help || echo "Failed to run 'cargo dist --help'"

      - name: Debug PATH and cargo-dist (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Write-Host "--- Current PATH (Windows) ---"
          Get-Item Env:Path
          Write-Host "--- Locate 'dist' binary (Windows) ---"
          Get-Command dist -ErrorAction SilentlyContinue | ForEach-Object { $_.Path } || Write-Host "'dist' binary not found in PATH"
          Write-Host "--- List Cargo subcommands (Windows) ---"
          cargo --list
          Write-Host "--- Attempt to run cargo dist help (Windows) ---"
          cargo dist --help || Write-Host "Failed to run 'cargo dist --help'"
      # --- DEBUGGING STEPS END HERE ---

      - name: Build & package releases (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: cargo dist --tag ${{ github.ref_name }}
        env:
          RUSTFLAGS: '-C target-cpu=native'

      - name: Build & package releases (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: cargo dist --tag ${{ github.ref_name }}