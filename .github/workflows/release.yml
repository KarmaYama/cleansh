name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      manifest: ${{ steps.plan-step.outputs.manifest }}
      tag-flag: ${{ steps.plan-step.outputs.tag-flag }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dist
        shell: bash
        run: |
          curl -LsSf https://github.com/axodotdev/cargo-dist/releases/download/v0.28.0/cargo-dist-installer.sh | sh

      - name: Cache dist
        uses: actions/upload-artifact@v4
        with:
          name: cargo-dist-cache
          path: ~/.cargo/bin/dist

      - id: plan-step
        run: |
          tag="${GITHUB_REF#refs/tags/}"
          dist plan --output-format=json --tag "$tag" > plan-dist-manifest.json
          echo "manifest=$(jq -c '.' plan-dist-manifest.json)" >> "$GITHUB_OUTPUT"
          echo "tag-flag=--tag=$tag"             >> "$GITHUB_OUTPUT"

      - name: Upload plan manifest
        uses: actions/upload-artifact@v4
        with:
          name: plan-manifest
          path: plan-dist-manifest.json

  build-local:
    needs: plan
    if: ${{ fromJson(needs.plan.outputs.manifest).ci.github.artifacts_matrix.include != null }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.plan.outputs.manifest).ci.github.artifacts_matrix }}
    # Map any Ubuntu runner to ubuntu-latest; leave others as-is
    runs-on: ${{ matrix.runner == 'ubuntu-20.04' && 'ubuntu-latest' || matrix.runner }}
    container: ${{ matrix.container.image || null }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BUILD_MANIFEST: target/distrib/${{ join(matrix.targets, '-') }}-dist-manifest.json
      TAG_FLAG: ${{ needs.plan.outputs.tag-flag }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dist
        run: ${{ matrix.install_dist.run }}

      - name: Fetch plan manifest
        uses: actions/download-artifact@v4
        with:
          name: plan-manifest
          path: target/distrib/
          merge-multiple: true

      - name: Build artifacts
        run: |
          dist build $TAG_FLAG \
            --print=linkage \
            --output-format=json \
            ${{ matrix.dist_args }} > dist-manifest.json

      - id: upload-paths
        run: |
          echo "paths<<EOF" >> "$GITHUB_OUTPUT"
          dist print-upload-files-from-manifest --manifest dist-manifest.json >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: local-artifacts-${{ join(matrix.targets, '_') }}
          path: |
            ${{ steps.upload-paths.outputs.paths }}
            ${{ env.BUILD_MANIFEST }}

  build-global:
    needs: [plan, build-local]
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BUILD_MANIFEST: target/distrib/global-dist-manifest.json
      TAG_FLAG: ${{ needs.plan.outputs.tag-flag }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Retrieve dist
        uses: actions/download-artifact@v4
        with:
          name: cargo-dist-cache
          path: ~/.cargo/bin/

      - run: chmod +x ~/.cargo/bin/dist

      - name: Fetch local artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: local-artifacts-*
          path: target/distrib/
          merge-multiple: true

      - name: Build global artifacts
        run: |
          dist build $TAG_FLAG \
            --output-format=json \
            --artifacts=global > dist-manifest.json

      - name: Upload global artifacts
        uses: actions/upload-artifact@v4
        with:
          name: global-artifacts
          path: |
            $(jq --raw-output ".upload_files[]" dist-manifest.json)
            ${{ env.BUILD_MANIFEST }}

  host:
    needs: [plan, build-local, build-global]
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TAG_FLAG: ${{ needs.plan.outputs.tag-flag }}
    outputs:
      manifest: ${{ steps.host-step.outputs.manifest }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Retrieve dist
        uses: actions/download-artifact@v4
        with:
          name: cargo-dist-cache
          path: ~/.cargo/bin/

      - run: chmod +x ~/.cargo/bin/dist

      - name: Fetch all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '**/dist-manifest.json'
          path: target/distrib/
          merge-multiple: true

      - id: host-step
        run: |
          dist host $TAG_FLAG \
            --steps=upload --steps=release \
            --output-format=json > dist-manifest.json
          echo "manifest=$(jq -c '.' dist-manifest.json)" >> "$GITHUB_OUTPUT"

      - name: Upload host manifest
        uses: actions/upload-artifact@v4
        with:
          name: host-manifest
          path: dist-manifest.json

  announce:
    needs: host
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Release
        run: |
          gh release create "${{ github.ref_name }}" \
            --target "$GITHUB_SHA" \
            ${{ fromJson(needs.host.outputs.manifest).announcement_is_prerelease && '--prerelease' || '' }} \
            --title "${{ fromJson(needs.host.outputs.manifest).announcement_title }}" \
            --notes "$(fromJson(needs.host.outputs.manifest).announcement_github_body)" \
            target/distrib/*
